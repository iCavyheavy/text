КЕРУВАННЯ ЖИТТЄВИМ ЦИКЛОМ ЛЮДИНО-МАШИННИХ ІНТЕРФЕЙСІВ

Стаття присвячена дослідженню підходів і принципів керування життєвим циклом людино-машинного інтерфейсу. Ефективність роботи автоматизова-них систем керування технологічними процесами значною мірою залежить від засобів людино-машинного інтерфейсу (ЛМІ), які є складовою частиною авто-матизованих систем керування. Тут людина відіграє визначальну роль у про-цесах керування, тому правильна побудова та супроводження людино-машин-ного інтерфейсу безпосередньо стосується ефективності роботи систем у цілому.
Хоч для задоволення вимог до збільшення кількості контрольованих пара-метрів оператором використовуються новітні технології збору, обробки та відображення даних, які стрімко розвиваються, в той же час здатність лю-дини (оператора) до виявлення, діагностування та реагування не змінилася. Окрім стандартних функцій моніторингу та керування, розроблений людино-машинний інтерфейс допомагає на етапах пуску і налагодження АСК ТП, що обумовлює зменшення часу та затрат на запуск виробництва й зміну про-дукту. Світовий досвід ефективного керування життєвим циклом ЛМІ та правила їх побудови знайшли відображення у спеціалізованих стандартах, які проаналізовані у статті. Читач може ознайомитися з основними стадіями та діяльностями життєвого циклу ЛМІ відповідно до стандартів, які слугують основою для побудови ефективних систем керування.
Незважаючи на існування затверджених практик у спеціалізованих стан-дартах, є ряд труднощів у використанні ЛМІ, повʼязаних з його складністю та спрямованістю на великі функціонально безпечні системи, тому знайдено ме-тодичне рішення для керування життєвим циклом ЛМІ з використанням за-собів SCADA/HMI, яке, з одного боку, засноване на основних положеннях су-часних стандартів стандартів, а з іншого — менш громіздке і придатне для використання в більшості АСКТП, що не мають особливих вимог. Результати дослідження мають прикладний характер і перевірені на практиці. Стаття передусім буде цікава науковцям у сфері автоматичного керування і спеціа-лістам, які задіяні в процесах проектування, розробки й експлуатації авто-матизованих систем керування технологічними процесами.
Ключові слова: людино-машинний інтерфейс, кращі практики, проекту-вання ЛМІ, реалізація ЛМІ, програмне забезпечення SCADA/HMI.
Постановка проблеми. Автоматизована система керування технологічним процесом (АСКТП) розробляється з метою інтенсифікації ТП, зменшення витрат і збільшення корисного виходу, при цьому враховується необхідність у
зменшенні відсотка втручання оператора в процес керування технологічним
об’єктом. Проте за будь-яких обставин участь людини залишається визнача-
льною у прийнятті рішень, тому під час розробки АСКТП значна кількість часу
приділяється розробці людино-машинного інтерфейсу. Людино-машинний ін-
терфейс (Human machine interface, HMI) — це набір апаратного та програмного
забезпечення, яке використовується оператором та іншими користувачами для
моніторингу і взаємодії з системою керування та процесом через систему ке-
рування.
Автори статті брали участь у розробці та впровадженні систем керування як
в Україні, так і за кордоном. Аналіз процесів розробки та результатів роботи
колег (розробників АСКТП) і спілкування на різноманітних професійних пло-
щадках дає привід сказати, що у більшості випадків керуванню життєвим ци-
клом ЛМІ не приділяється належна увага. Причому навіть при формуванні
вимог до розроблювальної системи ЛМІ може навіть не згадуватися. Це супе-
речить сучасним підходам до інженерії, адже організація процесів зі створення
та обслуговування будь-якої системи повинна проводитися через означення її
життєвого циклу (ЖЦ). Сьогодні людино-машинний інтерфейс є не просто ча-
стиною засобу керування, це складний програмно-технічний комплекс, який
може розробляти інша організація. Тому однією з цілей цієї статті є донесення
до читача необхідності у керуванні процесами життєвого циклу ЛМІ через фор-
мальне означення, як це робиться для будь-яких систем. Навіть якщо ЖЦ ЛМІ
не відділяється від АСКТП, явне виділення процесів, що його стосуються, має
ряд переваг. По-перше, такий підхід дає чітке розуміння того, що потрібно ро-
бити учаснику ЖЦ в процесі: з чого починати, що необхідно отримати на
конкретному етапі розробки/експлуатації, яку послідовність дій проводити, як
перевіряти результати тощо. У результаті розробка ЛМІ стає більш послідов-
ною, проект у цілому набуває більш структурованого характеру за рахунок того,
що в роботі із системою передбачаються різноманітні сценарії, полегшується її
використання. По-друге, можна використовувати стандартизовані практики, що
робить ці процеси ефективними, оскільки це перевірено світовим досвідом.
Аналіз останніх досліджень і публікацій. Для керування процесами ЖЦ
ЛМІ використовуються стандарти ISA-101 (людино-машинні інтерфейси) [1] та
ISA-18.2 (Організація функціонування систем тривожної сигналізації в пере-
робних галузях промисловості) [2]. У цій статті коротко розглядається зміст
стандарту ISA-101, тоді як з основними положеннями стандарту ISA-18.2 мо-
жна ознайомитися в іншій статті авторів [3]. Стандарт ISA-101 передбачає, що
людино-машинний інтерфейс повинен розроблятися та керуватися з викори-
станням моделі життєвого циклу, яка показана на рис. 1.
Нижче розкривається зміст діяльностей, характерних для кожної стадії жит-
тєвого циклу людино-машинного інтерфейсу відповідно до ISA-101.

Розробка системних стандартів — це основа, на яку спирається весь жит-тєвий циклу ЛМІ. Системні стандарти включають: методологію, інструкцію щодо стилю, інструментарій ЛМІ. Методологія ЛМІ — це стратегічний доку-мент, зміст якого стосується принципів проектування, розробки та експлуатації ЛМІ, максимально незалежних від використовуваної платформи. Такий доку-мент розробляється, як правило, для всього виробничого майданчика або під-приємства. Методологія ЛМІ повинна забезпечити основу концепцій, відповід-но до яких нові розробники та користувачі можуть зрозуміти основні принципи й технічні обґрунтування, що дасть змогу їм ефективно створювати та підтри-мувати роботу ЛМІ. Після розроблення методології, згідно із стандартом, роз-робляють інструкції щодо стилю ЛМІ — документ, що містить заводські та/або корпоративні стандарти і вказівки щодо проектування та впровадження систем ЛМІ з використанням конкретної платформи, враховуючи її можливості й об-меження. Документ повинен деталізувати керівні принципи, визначені в мето-дології, містити загальні принципи проектування дисплеїв і повʼязаних із ними застосунків, і слугувати стандартом для реалізації. Розроблені правила та реко-мендації в інструкції щодо стилю реалізуються через інструментарій ЛМІ — сукупність елементів проектування ЛМІ для використання в межах конкретної платформи. Інструментарій ЛМІ можна створювати та модифікувати як окрему бібліотеку або розділяти на окремі набори інструментів. Основний набір пови-нен включати шаблони відображення, спливаючі вікна, лицьові панелі, а також статичні та динамічні графічні символи та компоненти.
Стадія проектування передбачає роботи, які передують реалізації, та такі етапи: розробка користувацьких вимог, вимог до функцій і задач; проектування консолі; проектування системи ЛМІ; проектування дисплеїв. Етап розробки користувацьких вимог, вимог до функцій і задач передбачає визначення та документування вимог цього типу, включаючи пов’язані з ними функції та користувачів (як первинних, так і вторинних). До первинних користувачів відносяться ті, хто безпосередньо відповідає за роботу устаткування, керованого з ЛМІ. До вторинних користувачів відносяться ті, хто підтримує операційну діяльність. Етап проектування консолі передбачає діяльності, пов’я-зані зі створенням документів щодо забезпечення мікросередовища для опера-тора. У сферу діяльності етапу, зокрема, входять роботи з комплектації консолі меблями, забезпечення операторів необхідними умовами роботи та відповід-ними робочими засобами. Етап проектування системи ЛМІ включає в себе ро-боти з вибору платформи для системи керування, відповідної операційної сис-теми, а також наборів інструментарію ЛМІ. На етапі проектування дисплеїв проводиться розробка концепції побудови дисплеїв та навігації по них.
Безпосередня розробка програмного забезпечення ЛМІ проводиться на стадії реалізації, яка включає такі етапи: розробка дисплеїв; розробка консолі; тесту-вання; навчання; введення в дію; верифікація. Розробка дисплеїв передбачає їх створення з використанням графічних об’єктів та елементів з інструментарію ЛМІ. На етапі розробки консолі потрібно проводити розробку апаратного та програмного забезпечення консолі, перевіряти кути огляду, розміщувати екран на потрібній висоті, клавіатуру, пристрої введення та інші елементи. Розроблення консолі включає встановлення та конфігурування програмного забезпечення операційної системи та системи керування. На етапі тестування слід проводити комплексні випробування ЛМІ та консолі з метою встановлення відповідності вимогам як щодо зручності використання, так і до загальних робочих характеристик. На етапі навчання проводяться тренування з розроб-лених дисплеїв на консолі. Етап введення в дію призначений для фінального тестування ЛМІ у виробничому середовищі. Після введення в дію, ЛМІ готова до верифікації, яка передбачає перевірку конкретних показників для прийняття системи в експлуатацію.
Після завершення введення в дію та верифікації, ЛМІ переходить до стадії експлуатації, для якої характерні такі діяльності: безпосередньо експлуатація, обслуговування та виведення з експлуатації. Під час експлуатації з регулярним плановим інтервалом повинно проводитися резервне копіювання. На етапі об-слуговування можна проводити такі дії: оновлення операційної системи, онов-лення програмного забезпечення системи безпеки або платформи, виправлення наявних помилок та модифікації, що відображають зміни в самому процесі або підтримку нових функціональних можливостей. Етап виведення з експлуата-ції — це діяльність, яка видаляє всю або частину засобу ЛМІ з експлуатації.
Окрім вище згаданих стадій, процеси яких проходять більш-менш послі-довно, ISA-101 виділяє безперервні робочі процеси, які проводяться протягом усього життєвого циклу системи. До цих процесів відносяться керування змі-нами, аудит та перевірка правильності. Як тільки життєвий цикл ЛМІ перейшов на етап експлуатації, всі зміни до системи рекомендується обробляти в рамках
процесу керування змінами. Цей процес повинен включати виконання та до-
тримання системних стандартів. Аудит — це робочий процес, що забезпечує
керування ЛМІ відповідно до життєвого циклу та системних стандартів. Періо-
дичні аудити необхідно проводити для перевірки відповідності системи цим
стандартам.
Вище описані основні принципи ISA-101. Осмислити їх з першого разу може
бути досить складно, а застосувати на практиці, здається, взагалі неможливо.
Дійсно, дотримання вимог стандарту вимагає дуже багато часу, задіяння
великої кількості людей, засобів організації роботи та інших ресурсів. Для
функціонально небезпечних обʼєктів і в тих системах, де від рішення людини
значною мірою залежить виробництво, застосування цього стандарту є бажа-
ним. Проте для більшості обʼєктів відповідність процесів та навіть моделі жит-
тєвого циклу відповідно до стандарту наразі є нереальними, оскільки вимагають
задіяння великої кількості ресурсів. Є потреба в наявності методичних реко-
мендацій, які б увібрали в себе найбільш критичні елементи стандарту і були б
простішими в реалізації. Необхідність пошуку такого рішення обумовлюється
тим, що розвиватися, бути конкурентоспроможним неможливо без дотримання
певної системності та стандартизованості у своїх рішеннях. Практичне застосу-
вання стандарту ISA-101 вимагає залучення великої кількості ресурсів, які не-
доступні під час проектування систем малої та середньої канальності (до кіль-
кох тисяч точок вводу/виводу). Крім того, стандарт зосереджується виключно
на функціях ЛМІ, тоді як процеси для інших супроводжувальних функцій не
входять до його сфери. Хоч частина з них, що відноситься до тривог, озна-
чується іншим стандартом ISA-18.2, усі інші функції не розглянуті в достатній
мірі.
Метою дослідження є розроблення методики керування життєвим циклом
людино-машинного інтерфейсу, який, з одного боку, відповідав би стандарту
ISA-101, з іншого — відносно просто застосовувався до технологічних об’єктів
будь-якого розміру та складності і враховував інші супровідні функції, що вхо-
дять до сучасних ЛМІ.
Викладення основних результатів дослідження. Для прикладного ПЗ
SCADA/HMI пропонується застосовувати життєвий цикл людино-машинного
інтерфейсу, розділений на такі стадії: розробка технічних вимог, проектування,
реалізація, введення в дію, експлуатація. Така стадійність не відповідає стан-
дарту ISA-101, тому нижче обґрунтовуються причини, за яких це зроблено.
Означення процесів кожної зі стадій залежать від прийнятих практик на
підприємствах замовника та виконавця і конкретного обʼєкта. Однак процеси
стадії формування вимог та самі документи «Вимоги» або «Технічне завдання»
мають спільні риси незалежно від ситуації, тому в статті саме цій стадії при-
ділено найбільше уваги.
Згідно зі стандартом ISA-101, вимоги розробляються на стадіях системних
стандартів та уточнюються на однойменному етапі стадії «Проектування». Така
стадійність передбачає наявність на підприємстві системних стандартів, що
наразі є радше винятком, ніж правилом. Виходом з цієї ситуації є виділення вимог в окрему стадію — розробка технічних вимог, на якій слід формувати
призначення підсистеми SCADA/HMI і означувати основні вимоги до неї.
Стадію можна завершувати формуванням документа «Технічні вимоги». Для
розроблення технічних вимог можна скористатися структурою технічного
завдання, означеного відповідно до ГОСТ 34.602-89 [4]. Згаданий ГОСТ вико-
ристовують для формування технічного завдання на загальну АСКТП, хоч ЛМІ,
за визначенням, є сама по собі автоматизованою системою. ГОСТ 34.602-89 не-
достатньо конкретизує вимоги до ЛМІ, що якраз є частиною цього дослідження.
Зокрема, у вимогах до структури та функціонування доречно вказувати: стру-
ктуру системи SCADA/HMI; кількість АРМ оператора, їх розміщення та умови
роботи.
Вимоги до чисельності та кваліфікації персоналу можна зводити до вимог до
користувачів, серед яких варто вказувати: перелік і призначення первинних та
вторинних типів користувачів; набір завдань; наявність, обмеження та спосіб
доступу віддалених користувачів; опис вимог до порядку адміністрування об-
лікових записів; необхідність інтегрування облікових записів з підсистемою
користувачів операційної системи; вимоги щодо обмежень доступу до ресурсів
комп’ютера поза середовищем виконання SCADA/HMI; способи автентифікації
користувачів; вимоги до правил авторизації.
У вимогах до надійності варто вказувати необхідність резервування частин
SCADA/HMI: серверів, шляхів доступу до джерел даних, мережних компонен-
тів тощо. У вимогах до безпеки необхідно висвітлювати всі питання, що сто-
суються функційної та кібербезпеки. При формуванні вимог щодо кібербезпеки
SCADA/HMI варто вказувати: вимоги щодо зонування в розподіленій системі
SCADA/HMI; вимоги щодо захисту мереж SCADA/HMI; вимоги щодо захисту
фізичного доступу; вимоги до правил використання знімних носіїв; вимоги до
доступу через периферійні порти апаратних засобів SCADA/HMI; вимоги щодо
керування доступом; вимоги щодо зміцнення конфігурацій; вимоги щодо не-
обхідності шифрування у передачі між компонентами; вимоги щодо ведення
журналу доступу користувачів до елементів SCADA/HMI; вимоги до резер-
вного копіювання; вимоги до антивірусного захисту; вимоги до оновлення
ПЗ; вимоги щодо віддаленого доступу до SCADA/HMI.
Вимоги до функцій і завдань варто розділяти за функціональними під-
системами SCADA/HMI, тобто на такі групи функцій: збір та обробка даних;
відображення та супервізорне керування; тривожна сигналізація; ведення жур-
налу подій; архівування та виведення трендів; керування рецептами; керування
рецептами; формування виробничих звітів; календарне планування; мульти-
мовна підтримка; виконання спеціальних завдань; обмін зі сторонніми БД;
обмін з іншими системами SCADA/HMI; інтегрування з верхнім рівнем.
Серед загальних вимог щодо збору та обробки даних слід вказувати: перелік
мережних інтерфейсів і протоколів; перелік пристроїв, з вказівкою використа-
них протоколів та інтерфейсів; особливості доступу до пристроїв та обмеження
протоколів; необхідність резервування каналів і правила переключення між
резервними каналами. Також вимоги щодо збору даних можуть стосуватися
окремих змінних з/на пристроях. До кожного тегу у вимогах варто вказувати: необхідність масштабування та реальні межі; одиниці вимірювання; використа-
ння у функціях SCADA/HMI: з вказівкою періодичності або умови оновлення;
використання тільки для читання чи і для запису; можливість заміни значення
форсованим значенням.
Щодо вимог до відображення та супервізорного керування, то варто врахо-
вувати такі типові вимоги: вимоги до стилів; вимоги щодо ієрархічності, кон-
цепції та змісту дисплеїв; вимоги до способів і методів навігації по дисплеях;
перелік обов’язкових дисплеїв з означенням доступу; вимоги до наповнення та
розташування елементів на дисплеях різного рівня; вимоги до типів дисплеїв;
вимоги щодо використання кольорів і миготіння; правила графічного представ-
лення технологічних процесів; вимоги до швидкості виклику та обробки дис-
плеїв; вимоги до методів та засобів керування; перелік графічних зображень
типових об’єктів та їх поведінки; перелік графічних зображень типових лицьо-
вих панелей і спливних сторінок, а також їх поведінки. Загалом підходи до
означення цих вимог описані в стандарті ISA-101.
Наступною рекомендацією є формування вимог до підсистеми тривожної си-
гналізації. Як уже згадувалося раніше, ця тема детально освітлена в стандарті
ISA-18.2 [2]. При аналізі цих вимог авторами статті були виділені такі типові
вимоги до тривог і подій: вимоги до автоматів станів тривог; перелік і приз-
начення пріоритетів тривог; перелік класів тривог з їхніми означеннями; перелік
груп тривог; вимоги до візуальної індикації та звукового оповіщення тривог;
вимоги до функціональних можливостей дисплеїв тривог; вимоги до функціо-
нальних можливостей конфігурування тривог; вимоги до функціональних мож-
ливостей ведення журналу тривог; вимоги до функціональних можливостей
керування життєвим циклом підсистеми тривожної сигналізації. Серед вимог до
ведення журналу подій рекомендуємо передбачати реєстрацію таких подій:
технологічні події; реєстрація користувача в системі; відкриття сторінок; пере-
ключення режимів «ручний»/«автомат» регуляторів і виконавчих механізмів.
Також варто звернути увагу на необхідність формування вимог до архіву-
вання та виведення трендів, серед яких для кожної технологічної змінної вка-
зувати: призначення архівування; періодичність та глибина збереження на ко-
роткочасний період; періодичність або функції статистичної обробки та глибина
запису на довготривалий період; призначення групам кривих. Варто наводити
перелік дисплеїв з трендами, для кожного з яких вказувати призначення; підтип
дисплею; групу кривих за замовчуванням. Слід вказувати вимоги до налашту-
вання груп кривих або окремих дисплеїв, для яких вказувати перелік змінних
для кривих; діапазон відображення; вимоги до масштабування.
Запропоновані вище вимоги до функцій, які логічно сформовані у групи.
Кожна група, у свою чергу, відповідає за конкретну підсистему SCADA/HMI,
які, як правило, представлені на виробництвах різного розміру. Проте, окрім
уже згаданих функцій SCADA/HMI, часто виникає необхідність у використанні
додаткової функціональності, яка може бути забезпечена завдяки додатковим
програмним модулям тому пропонується враховувати деякі з можливих ви-
мог до додаткових функцій. У вимогах до керування рецептами необхідно вказувати, чи потребується в рецептах зміна процедури, яка, можливо,
затребує додаткового модуля керування рецептами відповідно до стандартів
ISA-88/IEC-61512. Серед вимог до виробничих звітів слід виділяти: вимоги до
формату та засобів виведення звітів; вимоги до онлайн звітів; вимоги до змісту
кожного типу звіту; вимоги до події генерування звіту. У переліку вимог до
календарного планування можна вказувати: вимоги до необхідності врахування
робочих змін; вимоги до відносного часу виконання дій; вимоги до врахування
свят і вихідних; перелік дій, які необхідно виконувати за розкладом. У вимогах
до мультимовної підтримки можна наводити: перелік мов, які необхідно під-
тримувати в ЛМІ; мова за замовченням; вимоги до формату таблиць трансляції;
вимоги до об’єктів перекладу. Якщо в SCADA/HMI передбачаються якісь
розрахунки, пропонується описувати їх у вимогах до виконання спеціальних
завдань. Зокрема тут можна наводити: загальний опис і призначення; перелік
вхідних і вихідних даних; алгоритм, діаграма, формули розрахунку; періодич-
ність або подія, за якою повинно бути оброблене завдання; максимальний час
виконання; порядок розрахунку при недостовірності даних.
До вимог до обміну зі сторонніми базами даних можна включати: загальний
опис та призначення обміну з БД; опис СУБД та БД; опис можливих інтер-
фейсів обміну; вимоги до періодичності або події, за якою повинно бути
оброблене завдання читання/запису. Вимоги до обміну з іншими системами
SCADA/HMI та інтегрування з верхнім рівнем можна зводити до вказівки
способу інтеграції і відомості змінних, які приймають участь в обміні.
Після розроблення технічних вимог, описаних вище, можна переходити до
стадії проектування, яка передбачає проведення проектних робіт щодо розроб-
лювальної SCADA/HMI або її частини. Слід зазначити, що це трактування не
передбачає використання водоспадної моделі, воно радше означує різний
характер робіт. Тобто на стадії розробки вимог можуть бути означені тільки
частина вимог, після чого можна приступати до проектування. Для ЛМІ про-
ектування великою мірою передбачає роботи з технічного забезпечення, що
поєднується з однойменною стадією ЖЦ АСКТП в цілому.
Маючи відповідний набір документів щодо проектних рішень і попередньо
сформовані технічні вимоги, можна перейти до стадії реалізації, яка передбачає
створення програмного забезпечення для SCADA/HMI. Виділення окремої
стадії введення в дію, яка не передбачається стандартом ISA-101, диктується
необхідністю розділення процесів реалізації на майданчику розробника та
замовника. Розробка програмного проекту для SCADA/HMI може відбуватися
за різними сценаріями. Один із можливих сценаріїв розробки, який пропону-
ється, за умови наявності у вимогах переліку тегів вводу/виводу, тривог і
трендів, базується на механізмі експорту-імпорту. Спочатку списки тегів слід
переводити у формат електронної таблиці, доповнювати, адаптувати під імпорт
у середовище розробки SCADA/HMI. Після цього варто зробити експорт тегів у
формат, підтримуваний ним, наприклад CSV або XML, та імпортувати теги в
середовище розробки. Далі проводити розроблення типових дисплеїв, які слу-
гують розробнику і налагоджувальному персоналу та надають можливість проводити налагодження SCADA/HMI і системи керування до розроблення екс-
плуатаційних мнемосхем. Якщо на цьому кроці відсутня бібліотека необхідних
інструментів, варто її розробляти ще до розробки основних мнемосхем, але
після створення налагоджувальних дисплеїв. Далі можна розробляти дисплеї
тривог, трендів, які будуть використовуватися експлуатаційним персоналом.
Розробку дисплеїв 1-го та 2-го рівня (відповідно до ISA-101) можна проводити
в останню чергу, коли весь інший необхідний функціонал вже реалізовано.
Дотримуючись вказаного вище життєвого циклу, розроблене ПЗ для
SCADA/HMI переходить до стадії введення в дію, яка передбачає пускона-
лагоджувальні роботи на об’єкті та навчання персоналу. На стадії експлуатації
проводиться обслуговування SCADA/HMI, що передбачає внесення певних
змін у систему за необхідності. Варто забезпечити наявність експлуатаційної
документації введеного в дію SCADA-проекту, яка може містити: відомість
засобів; настанову з технічного обслуговування; настанову програмісту; наста-
нову оператору/диспетчеру.
Настанова з технічного обслуговування потрібна обслуговуючому персо-
налу, що відповідає за систему керування Сюди може входити: вид засобів
SCADA/HMI; загальний перелік функцій, які виконує конкретний засіб; перелік
додаткових експлуатаційних документів, які потребуються для кожного засобу;
перелік правил безпеки, яких необхідно дотримуватися під час підготовки
засобів до роботи; склад і кваліфікація персоналу, який допускається до екс-
плуатації й обслуговування; порядок перевірки знань персоналу перед допуском
його до роботи; зміст і методики перевірки працездатності засобів і пра-
вильності функціонування всієї системи; вказівка щодо дій у різних режимах;
процедури резервного копіювання і відновлення системи; процедури керування
конфігураціями ПЗ та прошивок; процедури розгортання ПЗ на ПК або опе-
раторській панелі; порядок і особливості налаштування засобів комунікації на
рівні прикладних протоколів обміну даними. Настанова програмісту повинна
включати опис проекту для спеціаліста, що буде в подальшому супроводжувати
розроблений проект. Вона може складатися з окремих розділів, що відпові-
дають структурі вибраного програмного пакета. Настанова оператору потрібна
для підготовки та інструктування оператора, який є первинним користувачем
системи. Настанова повинна містити повний опис інтерфейсу та функціона-
льних можливостей SCADA/HMI. За основу загальної структури документа
можна брати відмінений «РД 50-34.698-90» [5]. В описі операцій настанов варто
надавати роз’яснення послідовностей дій, які виконує оператор під час запуску
програми на виконання, реєстрації в системі, перемикання між викликами
вікон, закінчення роботи тощо. Зокрема, слід наводити: порядок взаємодії із си-
стемою керування в усіх режимах роботи; пояснення використання підсистеми
тривожної сигналізації; пояснення роботи засобів виявлення ненормальних
умов керування; порядок реагування на збої в процесі або системі керування;
пояснення організації навігації по дисплеям; пояснення щодо пошуку істо-
ричних даних; порядок коригування заданих значень; порядок коригування
параметрів; опис процедури запуску партії або ініціювання попередньо запрограмованої послідовності; опис процедури запуску або припинення складного неперервного процесу; правила виявлення спеціальних умов роботи устатко-вання або пристрою, наприклад таких, як режим обслуговування. Цей документ повинен бути зрозумілим оператору, який пройшов первинне навчання. Також цей документ може вміщувати розділи для вторинних користувачів, які обслу-говують цю систему.
Висновки
У статті запропоновано методику керування життєвим циклом людино-машинного інтерфейсу, яка, з одного боку, спрощує означену в стандарті ISA-101, з іншого — враховує процеси з функціями, які в ньому не означені. Методика включає означення процесів ЖЦ на стадіях: розробка технічних вимог, проектування, реалізація, введення в дію та експлуатація. Велика ува-га приділена означенню технічних вимог, які значною мірою впливають на ефективність роботи реалізованої системи. Виділення означених у резуль-татах дослідженнях процесів ґрунтується на практичному досвіді, усвідом-ленні сучасних реалій стану виробництв переробних галузей промисловості в Україні, методів взаємодії замовників і системних інтеграторів та на дослід-женнях відповідних галузевих стандартів ISA-101 та ISA-18.2.
